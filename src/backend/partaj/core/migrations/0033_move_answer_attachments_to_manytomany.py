# Generated by Django 3.0.5 on 2020-10-15 14:10

from django.db import migrations


def forwards(apps, schema_editor):
    """
    For each ReferralAnswerAttachment, create a relationship through the new ManyToMany
    field to ReferralAnswer.
    """
    ReferralAnswerAttachment = apps.get_model("core", "ReferralAnswerAttachment")

    for referral_answer_attachment in ReferralAnswerAttachment.objects.all():
        referral_answer_attachment.referral_answers.add(
            referral_answer_attachment.referral_answer
        )
        referral_answer_attachment.save()


def backwards(apps, schema_editor):
    """
    For each ReferralAnswerAttachment, create a relationship through the old ForeignKey field
    to the first ReferralAnswer in its referral_answers field.

    CAUTION: this is a destructive operation. By design, we cannot migrate back to a ManyToOne
    from a ManyToMany without the potential to lose some data.
    """
    ReferralAnswerAttachment = apps.get_model("core", "ReferralAnswerAttachment")

    for referral_answer_attachment in ReferralAnswerAttachment.objects.all():
        if referral_answer_attachment.referral_answers.first():
            referral_answer_attachment.referral_answer = (
                referral_answer_attachment.referral_answers.first()
            )
            referral_answer_attachment.save()


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0032_add_attachments_to_answers_manytomany"),
    ]

    operations = [
        migrations.RunPython(forwards, reverse_code=backwards),
    ]
