# Generated by Django 3.0.5 on 2021-09-08 12:24

from django.db import migrations
from django.db.models import Q

from partaj.core.models import ReferralState


def forwards(apps, schema_editor):
    """
    We just added new possible states for referrals. Some of those determine what tasks
    are available for users. Therefore we need to update existing referrals to these new
    states to make sure no referral ends up in a broken state.
    """
    Referral = apps.get_model("core", "Referral")

    for referral in Referral.objects.filter(state=ReferralState.ASSIGNED):
        if referral.answers.count() > 0:
            if referral.answers.filter(validation_request__isnull=False).count() > 0:
                referral.state = ReferralState.IN_VALIDATION
                referral.save()
            else:
                referral.state = ReferralState.PROCESSING
                referral.save()


def backwards(apps, schema_editor):
    """
    Simply move all referrals from the new states (PROCESSING and IN_VALIDATION) to the state
    they would have if those did not exist (ASSIGNED).
    """
    Referral = apps.get_model("core", "Referral")

    for referral in Referral.objects.filter(
        Q(state=ReferralState.PROCESSING) | Q(state=ReferralState.IN_VALIDATION)
    ):
        referral.state = ReferralState.ASSIGNED
        referral.save()


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0045_add_referralactivity_message"),
    ]

    operations = [
        migrations.RunPython(forwards, reverse_code=backwards),
    ]
